plugins {
    id 'dev.architectury.loom' version '1.3-SNAPSHOT'
    id 'io.github.juuxel.loom-vineflower' version '1.11.0'
}

base.archivesName = project.archives_base_name
version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    //mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:${project.forge_version}"

    modImplementation "maven.modrinth:balm:${project.balm_version}"
    modImplementation "maven.modrinth:waystones:${project.waystones_version}"

    // Locally sourced extra mods for runtime (i.e. testing)
    runtimeOnly fileTree(include: ['*.jar'], dir: 'extra-mods')
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }

    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.archives_base_name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
